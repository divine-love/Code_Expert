{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/goyal/Downloads/Code-Xpert-master/Code-Xpert-master/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/goyal/Downloads/Code-Xpert-master/Code-Xpert-master/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/goyal/Downloads/Code-Xpert-master/Code-Xpert-master/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useRef,useEffect}from\"react\";import toast from\"react-hot-toast\";import ACTIONS from\"../Actions\";import Client from\"../components/Client\";import Editor from\"../components/Editor\";import{initSocket}from\"../socket\";import{useLocation,useNavigate,Navigate,useParams}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var EditorPage=function EditorPage(){var socketRef=useRef(null);var reactNavigator=useNavigate();var location=useLocation();var codeRef=useRef(null);var _useParams=useParams(),roomId=_useParams.roomId;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),clients=_useState2[0],setClients=_useState2[1];useEffect(function(){var init=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var _location$state;var handleErrors;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:handleErrors=function _handleErrors(e){console.log(\"socket error\",e);toast.error(\"Socket connection failed, try again later.\");reactNavigator(\"/\");};_context.next=3;return initSocket();case 3:socketRef.current=_context.sent;// client connect to server by this function\nsocketRef.current.on(\"connect_error\",function(err){return handleErrors(err);});socketRef.current.on(\"connect_failed\",function(err){return handleErrors(err);});// used for room id to send\nsocketRef.current.emit(ACTIONS.JOIN,{// emit the join event\nroomId:roomId,username:(_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.username// ? if username not given then not give error\n});// Listening for joined event \nsocketRef.current.on(ACTIONS.JOINED,function(_ref2){var _location$state2;var clients=_ref2.clients,username=_ref2.username,socketId=_ref2.socketId;if(username!==((_location$state2=location.state)===null||_location$state2===void 0?void 0:_location$state2.username)){// who are started didnt get notify other will get \ntoast.success(\"\".concat(username,\" joined the room.\"));console.log(\"\".concat(username,\" joined\"));}setClients(clients);// pushing client  \n// as the client join we have to sync the previous code \nsocketRef.current.emit(ACTIONS.SYNC_CODE,{code:codeRef.current,socketId:socketId});});// Listening for disconnected\nsocketRef.current.on(ACTIONS.DISCONNECTED,function(_ref3){var socketId=_ref3.socketId,username=_ref3.username;toast.success(\"\".concat(username,\" left the room.\"));setClients(function(prev){// recieve the previous state \nreturn prev.filter(// loop through \nfunction(client){return client.socketId!==socketId;}// remove the disconnected client \n);});});case 9:case\"end\":return _context.stop();}},_callee);}));return function init(){return _ref.apply(this,arguments);};}();init();//many listener(ex socket.on) are there so we have to remove them \nreturn function(){socketRef.current.disconnect();socketRef.current.off(ACTIONS.JOINED);//unsubscribe the event \nsocketRef.current.off(ACTIONS.DISCONNECTED);};},[]);function copyRoomId(){return _copyRoomId.apply(this,arguments);}function _copyRoomId(){_copyRoomId=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return navigator.clipboard.writeText(roomId);case 3:// inbuit api from browser   \ntoast.success(\"Room ID has been copied to your clipboard\");_context2.next=10;break;case 6:_context2.prev=6;_context2.t0=_context2[\"catch\"](0);toast.error(\"Could not copy the Room ID\");console.error(_context2.t0);case 10:case\"end\":return _context2.stop();}},_callee2,null,[[0,6]]);}));return _copyRoomId.apply(this,arguments);}function leaveRoom(){reactNavigator(\"/\");}if(!location.state){return/*#__PURE__*/_jsx(Navigate,{to:\"/\"});}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"mainWrap\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"editorWrap\",children:/*#__PURE__*/_jsx(Editor,{socketRef:socketRef,roomId:roomId,onCodeChange:function onCodeChange(code){codeRef.current=code;}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"aside\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"asideInner\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"logo\",children:/*#__PURE__*/_jsx(\"img\",{className:\"logoImage\",src:\"/cx.png\",alt:\"logo\"})}),/*#__PURE__*/_jsx(\"h3\",{children:\"People Joined\"}),/*#__PURE__*/_jsx(\"div\",{className:\"clientsList\",children:clients.map(function(client){return/*#__PURE__*/_jsx(Client,{username:client.username},client.socketId);})})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn copyBtn\",onClick:copyRoomId,children:\"Copy ROOM ID\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn leaveBtn\",onClick:leaveRoom,children:\"Leave\"})]})]})});};export default EditorPage;","map":{"version":3,"names":["React","useState","useRef","useEffect","toast","ACTIONS","Client","Editor","initSocket","useLocation","useNavigate","Navigate","useParams","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","EditorPage","socketRef","reactNavigator","location","codeRef","_useParams","roomId","_useState","_useState2","_slicedToArray","clients","setClients","init","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_location$state","handleErrors","wrap","_callee$","_context","prev","next","_handleErrors","e","console","log","error","current","sent","on","err","emit","JOIN","username","state","JOINED","_ref2","_location$state2","socketId","success","concat","SYNC_CODE","code","DISCONNECTED","_ref3","filter","client","stop","apply","arguments","disconnect","off","copyRoomId","_copyRoomId","_callee2","_callee2$","_context2","navigator","clipboard","writeText","t0","leaveRoom","to","children","className","onCodeChange","src","alt","map","onClick"],"sources":["C:/Users/goyal/Downloads/Code-Xpert-master/Code-Xpert-master/src/pages/EditorPage.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport toast from \"react-hot-toast\";\nimport ACTIONS from \"../Actions\";\nimport Client from \"../components/Client\";\nimport Editor from \"../components/Editor\";\nimport { initSocket } from \"../socket\";\nimport {\n  useLocation,\n  useNavigate,\n  Navigate,\n  useParams,\n} from \"react-router-dom\";\n\nconst EditorPage = () => {\n  const socketRef = useRef(null);\n  const reactNavigator = useNavigate();\n  const location = useLocation();\n  const codeRef = useRef(null);\n  const { roomId } = useParams();\n  const [clients, setClients] = useState([\n     \n  ]);\n\n  useEffect(() => {\n    const init = async () => {\n      socketRef.current = await initSocket(); // client connect to server by this function\n      socketRef.current.on(\"connect_error\", (err) => handleErrors(err));\n      socketRef.current.on(\"connect_failed\", (err) => handleErrors(err));\n\n      function handleErrors(e) {\n        console.log(\"socket error\", e);\n        toast.error(\"Socket connection failed, try again later.\");\n        reactNavigator(\"/\");\n      }\n      // used for room id to send\n      socketRef.current.emit(ACTIONS.JOIN, {\n        // emit the join event\n        roomId,\n        username: location.state?.username, // ? if username not given then not give error\n      });\n\n\n // Listening for joined event \n      socketRef.current.on(\n        ACTIONS.JOINED,\n        ({ clients, username, socketId }) => {\n          if (username !== location.state?.username) { // who are started didnt get notify other will get \n            toast.success(`${username} joined the room.`);\n            console.log(`${username} joined`);\n          }\n          setClients(clients); // pushing client  \n          // as the client join we have to sync the previous code \n          socketRef.current.emit(ACTIONS.SYNC_CODE, {\n            code: codeRef.current,\n            socketId,\n          });\n        }\n      );\n \n          // Listening for disconnected\n          socketRef.current.on(\n            ACTIONS.DISCONNECTED,\n            ({ socketId, username }) => {\n                toast.success(`${username} left the room.`);\n                setClients((prev) => { // recieve the previous state \n                    return prev.filter(   // loop through \n                        (client) => client.socketId !== socketId   // remove the disconnected client \n                    );\n                });\n            }\n        );\n\n    };\n    init();\n   \n  //many listener(ex socket.on) are there so we have to remove them \n  return () => {\n    socketRef.current.disconnect();\n    socketRef.current.off(ACTIONS.JOINED); //unsubscribe the event \n    socketRef.current.off(ACTIONS.DISCONNECTED);\n};\n  }, []);\n\n  \n\n  async function copyRoomId() {\n    try {\n      await navigator.clipboard.writeText(roomId); // inbuit api from browser   \n      toast.success(\"Room ID has been copied to your clipboard\");\n    } catch (err) {\n      toast.error(\"Could not copy the Room ID\");\n      console.error(err);\n    }\n  }\n\n  function leaveRoom() {\n    reactNavigator(\"/\");\n  }\n\n  if (!location.state) {\n    return <Navigate to=\"/\" />;\n  }\n\n  return (\n    <>\n   \n    <div className=\"mainWrap\">\n   \n      <div className=\"editorWrap\">\n        <Editor\n        socketRef={socketRef}\n        roomId={roomId}\n        onCodeChange={(code) => {\n            codeRef.current = code;\n        }}\n        />\n      </div>\n\n      <div className=\"aside\">\n        <div className=\"asideInner\">\n          <div className=\"logo\">\n            <img className=\"logoImage\" src=\"/cx.png\" alt=\"logo\" />\n          </div>\n          <h3>People Joined</h3>\n          <div className=\"clientsList\">\n            {clients.map((client) => (\n              <Client key={client.socketId} username={client.username} />\n            ))}\n          </div>\n        </div>\n        <button className=\"btn copyBtn\" onClick={copyRoomId}>\n          Copy ROOM ID\n        </button>\n        <button className=\"btn leaveBtn\" onClick={leaveRoom}>\n          Leave\n        </button>\n      </div>\n\n    </div>\n    </>\n  );\n};\n\nexport default EditorPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}