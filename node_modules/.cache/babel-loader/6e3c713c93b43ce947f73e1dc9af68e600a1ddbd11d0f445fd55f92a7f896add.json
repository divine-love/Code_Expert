{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Dev\\\\code-editor\\\\src\\\\components\\\\Editor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Codemirror from 'codemirror';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/dracula.css';\nimport 'codemirror/theme/material-ocean.css';\nimport 'codemirror/theme/monokai.css';\nimport 'codemirror/theme/twilight.css';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/css/css';\nimport 'codemirror/mode/python/python';\nimport 'codemirror/addon/edit/closetag';\nimport 'codemirror/addon/edit/closebrackets';\nimport ACTIONS from '../Actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Editor = _ref => {\n  _s();\n  let {\n    socketRef,\n    roomId,\n    onCodeChange\n  } = _ref;\n  const editorRef = useRef(null);\n  useEffect(() => {\n    // we are connecting codemirror to text editor \n    async function init() {\n      editorRef.current = Codemirror.fromTextArea(document.getElementById('realtimeEditor'), {\n        mode: {\n          name: 'javascript',\n          json: true\n        },\n        theme: 'material-ocean',\n        autoCloseTags: true,\n        autoCloseBrackets: true,\n        lineNumbers: true\n      });\n      // when we add delete paste all can be shown in origin we can easily get it \n      editorRef.current.on('change', (instance, changes) => {\n        const {\n          origin\n        } = changes;\n        // console.log(changes);\n        const code = instance.getValue(); //get content of editor \n        onCodeChange(code);\n        if (origin !== 'setValue') {\n          socketRef.current.emit(ACTIONS.CODE_CHANGE, {\n            roomId,\n            code\n          });\n        }\n      });\n    }\n    init();\n  }, []);\n  useEffect(() => {\n    if (socketRef.current) {\n      socketRef.current.on(ACTIONS.CODE_CHANGE, _ref2 => {\n        let {\n          code\n        } = _ref2;\n        if (code !== null) {\n          editorRef.current.setValue(code);\n        }\n      });\n    }\n    //unsubscribe the code change function \n    return () => {\n      socketRef.current.off(ACTIONS.CODE_CHANGE);\n    };\n  }, [socketRef.current]);\n  return /*#__PURE__*/_jsxDEV(\"textarea\", {\n    id: \"realtimeEditor\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 12\n  }, this);\n};\n_s(Editor, \"ueqoO+5gVAT6IRBF08iN84bYr2g=\");\n_c = Editor;\nexport default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useEffect","useRef","Codemirror","ACTIONS","jsxDEV","_jsxDEV","Editor","_ref","_s","socketRef","roomId","onCodeChange","editorRef","init","current","fromTextArea","document","getElementById","mode","name","json","theme","autoCloseTags","autoCloseBrackets","lineNumbers","on","instance","changes","origin","code","getValue","emit","CODE_CHANGE","_ref2","setValue","off","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Web Dev/code-editor/src/components/Editor.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport Codemirror from 'codemirror';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/dracula.css';\nimport 'codemirror/theme/material-ocean.css';\nimport 'codemirror/theme/monokai.css'\nimport 'codemirror/theme/twilight.css'\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/css/css';\nimport 'codemirror/mode/python/python';\nimport 'codemirror/addon/edit/closetag';\nimport 'codemirror/addon/edit/closebrackets';\nimport ACTIONS from '../Actions';  \n \nconst Editor = ({socketRef,roomId, onCodeChange}) => {\n    const editorRef = useRef(null);\n    useEffect(()=>{\n       // we are connecting codemirror to text editor \n        async function init()\n       { \n        editorRef.current =Codemirror.fromTextArea(\n            document.getElementById('realtimeEditor'),\n            {\n                mode: { name: 'javascript', json: true },\n                theme: 'material-ocean',\n                autoCloseTags: true,\n                autoCloseBrackets: true,\n                lineNumbers: true,\n            }\n        );\n  // when we add delete paste all can be shown in origin we can easily get it \n        editorRef.current.on('change', (instance, changes) => {\n            const { origin } = changes;\n            // console.log(changes);\n            const code = instance.getValue(); //get content of editor \n            onCodeChange(code);\n            if (origin !== 'setValue') {\n                socketRef.current.emit(ACTIONS.CODE_CHANGE, {\n                    roomId,\n                    code,\n                });\n            }\n        }); \n\n   \n\n       }\n   init();\n\n    },[]);\n\n    useEffect(() => {\n        if (socketRef.current) {\n            socketRef.current.on(ACTIONS.CODE_CHANGE, ({ code }) => {\n                if (code !== null) {\n                    editorRef.current.setValue(code);\n                }\n            });\n        }\n    //unsubscribe the code change function \n        return () => {\n            socketRef.current.off(ACTIONS.CODE_CHANGE);\n        };\n    }, [socketRef.current]);\n\n\n    return <textarea id=\"realtimeEditor\"></textarea>;\n};\n\nexport default Editor;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAO,+BAA+B;AACtC,OAAO,8BAA8B;AACrC,OAAO,qCAAqC;AAC5C,OAAO,8BAA8B;AACrC,OAAO,+BAA+B;AACtC,OAAO,uCAAuC;AAC9C,OAAO,yBAAyB;AAChC,OAAO,+BAA+B;AACtC,OAAO,gCAAgC;AACvC,OAAO,qCAAqC;AAC5C,OAAOC,OAAO,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,MAAM,GAAGC,IAAA,IAAsC;EAAAC,EAAA;EAAA,IAArC;IAACC,SAAS;IAACC,MAAM;IAAEC;EAAY,CAAC,GAAAJ,IAAA;EAC5C,MAAMK,SAAS,GAAGX,MAAM,CAAC,IAAI,CAAC;EAC9BD,SAAS,CAAC,MAAI;IACX;IACC,eAAea,IAAIA,CAAA,EACpB;MACCD,SAAS,CAACE,OAAO,GAAEZ,UAAU,CAACa,YAAY,CACtCC,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC,EACzC;QACIC,IAAI,EAAE;UAAEC,IAAI,EAAE,YAAY;UAAEC,IAAI,EAAE;QAAK,CAAC;QACxCC,KAAK,EAAE,gBAAgB;QACvBC,aAAa,EAAE,IAAI;QACnBC,iBAAiB,EAAE,IAAI;QACvBC,WAAW,EAAE;MACjB,CACJ,CAAC;MACP;MACMZ,SAAS,CAACE,OAAO,CAACW,EAAE,CAAC,QAAQ,EAAE,CAACC,QAAQ,EAAEC,OAAO,KAAK;QAClD,MAAM;UAAEC;QAAO,CAAC,GAAGD,OAAO;QAC1B;QACA,MAAME,IAAI,GAAGH,QAAQ,CAACI,QAAQ,CAAC,CAAC,CAAC,CAAC;QAClCnB,YAAY,CAACkB,IAAI,CAAC;QAClB,IAAID,MAAM,KAAK,UAAU,EAAE;UACvBnB,SAAS,CAACK,OAAO,CAACiB,IAAI,CAAC5B,OAAO,CAAC6B,WAAW,EAAE;YACxCtB,MAAM;YACNmB;UACJ,CAAC,CAAC;QACN;MACJ,CAAC,CAAC;IAIH;IACJhB,IAAI,CAAC,CAAC;EAEL,CAAC,EAAC,EAAE,CAAC;EAELb,SAAS,CAAC,MAAM;IACZ,IAAIS,SAAS,CAACK,OAAO,EAAE;MACnBL,SAAS,CAACK,OAAO,CAACW,EAAE,CAACtB,OAAO,CAAC6B,WAAW,EAAEC,KAAA,IAAc;QAAA,IAAb;UAAEJ;QAAK,CAAC,GAAAI,KAAA;QAC/C,IAAIJ,IAAI,KAAK,IAAI,EAAE;UACfjB,SAAS,CAACE,OAAO,CAACoB,QAAQ,CAACL,IAAI,CAAC;QACpC;MACJ,CAAC,CAAC;IACN;IACJ;IACI,OAAO,MAAM;MACTpB,SAAS,CAACK,OAAO,CAACqB,GAAG,CAAChC,OAAO,CAAC6B,WAAW,CAAC;IAC9C,CAAC;EACL,CAAC,EAAE,CAACvB,SAAS,CAACK,OAAO,CAAC,CAAC;EAGvB,oBAAOT,OAAA;IAAU+B,EAAE,EAAC;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAW,CAAC;AACpD,CAAC;AAAChC,EAAA,CArDIF,MAAM;AAAAmC,EAAA,GAANnC,MAAM;AAuDZ,eAAeA,MAAM;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}