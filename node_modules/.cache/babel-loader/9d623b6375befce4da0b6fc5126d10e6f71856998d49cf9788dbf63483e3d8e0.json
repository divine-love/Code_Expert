{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Dev\\\\Code\\\\code-editor\\\\src\\\\components\\\\Editor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Codemirror from 'codemirror';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/dracula.css';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/addon/edit/closetag';\nimport 'codemirror/addon/edit/closebrackets';\nimport ACTIONS from '../Actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Editor = _ref => {\n  _s();\n  let {\n    socketRef,\n    roomId\n  } = _ref;\n  const editorRef = useRef(null);\n  useEffect(() => {\n    async function init() {\n      editorRef.current = Codemirror.fromTextArea(document.getElementById('realtimeEditor'), {\n        mode: {\n          name: 'javascript',\n          json: true\n        },\n        theme: 'dracula',\n        autoCloseTags: true,\n        autoCloseBrackets: true,\n        lineNumbers: true\n      });\n      // when we add delete paste all can be shown in origin we can easily get it \n      editorRef.current.on('change', (instance, changes) => {\n        const {\n          origin\n        } = changes;\n        // console.log(changes);\n        const code = instance.getValue(); //get content of editor \n        // onCodeChange(code);\n        if (origin !== 'setValue') {\n          socketRef.current.emit(ACTIONS.CODE_CHANGE, {\n            roomId,\n            code\n          });\n        }\n      });\n    }\n    init();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"textarea\", {\n    id: \"realtimeEditor\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 12\n  }, this);\n};\n_s(Editor, \"FXGU5sRik9TpAO5B+Yli91RwFDk=\");\n_c = Editor;\nexport default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useEffect","useRef","Codemirror","ACTIONS","jsxDEV","_jsxDEV","Editor","_ref","_s","socketRef","roomId","editorRef","init","current","fromTextArea","document","getElementById","mode","name","json","theme","autoCloseTags","autoCloseBrackets","lineNumbers","on","instance","changes","origin","code","getValue","emit","CODE_CHANGE","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Web Dev/Code/code-editor/src/components/Editor.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport Codemirror from 'codemirror';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/dracula.css';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/addon/edit/closetag';\nimport 'codemirror/addon/edit/closebrackets';\nimport ACTIONS from '../Actions';  \n\nconst Editor = ({socketRef,roomId}) => {\n    const editorRef = useRef(null);\n    useEffect(()=>{\n       async function init()\n       {\n        editorRef.current =Codemirror.fromTextArea(\n            document.getElementById('realtimeEditor'),\n            {\n                mode: { name: 'javascript', json: true },\n                theme: 'dracula',\n                autoCloseTags: true,\n                autoCloseBrackets: true,\n                lineNumbers: true,\n            }\n        );\n  // when we add delete paste all can be shown in origin we can easily get it \n        editorRef.current.on('change', (instance, changes) => {\n            const { origin } = changes;\n            // console.log(changes);\n            const code = instance.getValue(); //get content of editor \n            // onCodeChange(code);\n            if (origin !== 'setValue') {\n                socketRef.current.emit(ACTIONS.CODE_CHANGE, {\n                    roomId,\n                    code,\n                });\n            }\n        }); \n\n   \n      \n\n\n       }\n   init();\n\n    },[]);\n    return <textarea id=\"realtimeEditor\"></textarea>;\n};\n\nexport default Editor;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAO,+BAA+B;AACtC,OAAO,8BAA8B;AACrC,OAAO,uCAAuC;AAC9C,OAAO,gCAAgC;AACvC,OAAO,qCAAqC;AAC5C,OAAOC,OAAO,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,MAAM,GAAGC,IAAA,IAAwB;EAAAC,EAAA;EAAA,IAAvB;IAACC,SAAS;IAACC;EAAM,CAAC,GAAAH,IAAA;EAC9B,MAAMI,SAAS,GAAGV,MAAM,CAAC,IAAI,CAAC;EAC9BD,SAAS,CAAC,MAAI;IACX,eAAeY,IAAIA,CAAA,EACnB;MACCD,SAAS,CAACE,OAAO,GAAEX,UAAU,CAACY,YAAY,CACtCC,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC,EACzC;QACIC,IAAI,EAAE;UAAEC,IAAI,EAAE,YAAY;UAAEC,IAAI,EAAE;QAAK,CAAC;QACxCC,KAAK,EAAE,SAAS;QAChBC,aAAa,EAAE,IAAI;QACnBC,iBAAiB,EAAE,IAAI;QACvBC,WAAW,EAAE;MACjB,CACJ,CAAC;MACP;MACMZ,SAAS,CAACE,OAAO,CAACW,EAAE,CAAC,QAAQ,EAAE,CAACC,QAAQ,EAAEC,OAAO,KAAK;QAClD,MAAM;UAAEC;QAAO,CAAC,GAAGD,OAAO;QAC1B;QACA,MAAME,IAAI,GAAGH,QAAQ,CAACI,QAAQ,CAAC,CAAC,CAAC,CAAC;QAClC;QACA,IAAIF,MAAM,KAAK,UAAU,EAAE;UACvBlB,SAAS,CAACI,OAAO,CAACiB,IAAI,CAAC3B,OAAO,CAAC4B,WAAW,EAAE;YACxCrB,MAAM;YACNkB;UACJ,CAAC,CAAC;QACN;MACJ,CAAC,CAAC;IAMH;IACJhB,IAAI,CAAC,CAAC;EAEL,CAAC,EAAC,EAAE,CAAC;EACL,oBAAOP,OAAA;IAAU2B,EAAE,EAAC;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAW,CAAC;AACpD,CAAC;AAAC5B,EAAA,CAtCIF,MAAM;AAAA+B,EAAA,GAAN/B,MAAM;AAwCZ,eAAeA,MAAM;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}