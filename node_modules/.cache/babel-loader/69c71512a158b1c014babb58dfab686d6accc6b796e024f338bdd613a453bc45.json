{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Dev\\\\Code\\\\code-editor\\\\src\\\\components\\\\Editor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Codemirror from 'codemirror';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/dracula.css';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/addon/edit/closetag';\nimport 'codemirror/addon/edit/closebrackets';\nimport ACTIONS from '../Actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Editor = () => {\n  _s();\n  const editorRef = useRef(null);\n  useEffect(() => {\n    //         async function init() {\n    //             editorRef.current = Codemirror.fromTextArea(\n    //                 document.getElementById('realtimeEditor'),\n    //                 {\n    //                     mode: { name: 'javascript', json: true },\n    //                     theme: 'dracula',\n    //                     autoCloseTags: true,\n    //                     autoCloseBrackets: true,\n    //                     lineNumbers: true,\n    //                 }\n    //             );\n\n    //             editorRef.current.on('change', (instance, changes) => {\n    //                 const { origin } = changes;\n    //                 const code = instance.getValue();\n    //                 onCodeChange(code);\n    //                 if (origin !== 'setValue') {\n    //                     socketRef.current.emit(ACTIONS.CODE_CHANGE, {\n    //                         roomId,\n    //                         code,\n    //                     });\n    //                 }\n    //             });\n    //         }\n    //         init();\n    //     }, []);\n\n    // useEffect(() => {\n    //     if (socketRef.current) {\n    //         socketRef.current.on(ACTIONS.CODE_CHANGE, ({ code }) => {\n    //             if (code !== null) {\n    //                 editorRef.current.setValue(code);\n    //             }\n    //         });\n    //     }\n\n    //     return () => {\n    //         if (socketRef.current) {\n    //         socketRef.current.off(ACTIONS.CODE_CHANGE);\n    //         }\n    //     };\n  }, [socketRef.current]);\n  return /*#__PURE__*/_jsxDEV(\"textarea\", {\n    id: \"realtimeEditor\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 12\n  }, this);\n};\n_s(Editor, \"FXGU5sRik9TpAO5B+Yli91RwFDk=\");\n_c = Editor;\nexport default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useEffect","useRef","Codemirror","ACTIONS","jsxDEV","_jsxDEV","Editor","_s","editorRef","socketRef","current","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Web Dev/Code/code-editor/src/components/Editor.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport Codemirror from 'codemirror';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/dracula.css';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/addon/edit/closetag';\nimport 'codemirror/addon/edit/closebrackets';\nimport ACTIONS from '../Actions';\n\nconst Editor = () => {\n    const editorRef = useRef(null);\n    useEffect(() => {\n//         async function init() {\n//             editorRef.current = Codemirror.fromTextArea(\n//                 document.getElementById('realtimeEditor'),\n//                 {\n//                     mode: { name: 'javascript', json: true },\n//                     theme: 'dracula',\n//                     autoCloseTags: true,\n//                     autoCloseBrackets: true,\n//                     lineNumbers: true,\n//                 }\n//             );\n\n//             editorRef.current.on('change', (instance, changes) => {\n//                 const { origin } = changes;\n//                 const code = instance.getValue();\n//                 onCodeChange(code);\n//                 if (origin !== 'setValue') {\n//                     socketRef.current.emit(ACTIONS.CODE_CHANGE, {\n//                         roomId,\n//                         code,\n//                     });\n//                 }\n//             });\n//         }\n//         init();\n//     }, []);\n\n    // useEffect(() => {\n    //     if (socketRef.current) {\n    //         socketRef.current.on(ACTIONS.CODE_CHANGE, ({ code }) => {\n    //             if (code !== null) {\n    //                 editorRef.current.setValue(code);\n    //             }\n    //         });\n    //     }\n\n        \n    //     return () => {\n    //         if (socketRef.current) {\n    //         socketRef.current.off(ACTIONS.CODE_CHANGE);\n    //         }\n    //     };\n    }, [socketRef.current]);\n\n    return <textarea id=\"realtimeEditor\"></textarea>;\n};\n\nexport default Editor;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAO,+BAA+B;AACtC,OAAO,8BAA8B;AACrC,OAAO,uCAAuC;AAC9C,OAAO,gCAAgC;AACvC,OAAO,qCAAqC;AAC5C,OAAOC,OAAO,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,SAAS,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC9BD,SAAS,CAAC,MAAM;IACpB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEI;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAGA;IACA;IACA;IACA;IACA;EAAA,CACC,EAAE,CAACS,SAAS,CAACC,OAAO,CAAC,CAAC;EAEvB,oBAAOL,OAAA;IAAUM,EAAE,EAAC;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAW,CAAC;AACpD,CAAC;AAACR,EAAA,CAhDID,MAAM;AAAAU,EAAA,GAANV,MAAM;AAkDZ,eAAeA,MAAM;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}